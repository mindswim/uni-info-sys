{
    "openapi": "3.0.0",
    "info": {
        "title": "University Admissions System API",
        "description": "RESTful API for managing university admissions, student enrollment, and academic records",
        "contact": {
            "email": "admin@university.edu"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "/api/v1",
            "description": "API V1"
        }
    ],
    "paths": {
        "/api/v1/students/{student}/academic-records": {
            "get": {
                "tags": [
                    "Academic Records"
                ],
                "summary": "Get a student's academic records",
                "description": "Retrieve a list of academic records for a specific student.",
                "operationId": "1695a313a81a112508503850fe256d7d",
                "parameters": [
                    {
                        "name": "student",
                        "in": "path",
                        "description": "The ID of the student.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AcademicRecordResource"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Academic Records"
                ],
                "summary": "Create a new academic record",
                "description": "Create a new academic record for a student. Not implemented.",
                "operationId": "9277acecd95bca24b717ed4c13c0d027",
                "parameters": [
                    {
                        "name": "student",
                        "in": "path",
                        "description": "The ID of the student.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "501": {
                        "description": "Not Implemented"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/academic-records/{academic_record}": {
            "get": {
                "tags": [
                    "Academic Records"
                ],
                "summary": "Get a specific academic record",
                "description": "Retrieve the details of a specific academic record.",
                "operationId": "bb908a1f0ec469e66d4380f7370966fe",
                "parameters": [
                    {
                        "name": "academic_record",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AcademicRecordResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Academic Records"
                ],
                "summary": "Update an academic record",
                "description": "Update an academic record. Not implemented.",
                "operationId": "acbef71c9974f13cfa64cf79cbd33b42",
                "parameters": [
                    {
                        "name": "academic_record",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "501": {
                        "description": "Not Implemented"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Academic Records"
                ],
                "summary": "Delete an academic record",
                "description": "Delete an academic record. Not implemented.",
                "operationId": "28039e25049d3ab874642d02c00e8b24",
                "parameters": [
                    {
                        "name": "academic_record",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "501": {
                        "description": "Not Implemented"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/admission-applications": {
            "get": {
                "tags": [
                    "Admission Applications"
                ],
                "summary": "Get a list of admission applications",
                "description": "Retrieve a paginated list of admission applications. Admin and staff can see all applications, students can only see their own.",
                "operationId": "a57b7d8420e8d2a2a8e7a2370ea73f31",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15,
                            "maximum": 100,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by application status",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "draft",
                                "submitted",
                                "under_review",
                                "accepted",
                                "rejected"
                            ]
                        }
                    },
                    {
                        "name": "student_id",
                        "in": "query",
                        "description": "Filter by student ID (admin/staff only)",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "term_id",
                        "in": "query",
                        "description": "Filter by term ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of admission applications retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/AdmissionApplicationResource"
                                            }
                                        },
                                        "meta": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "per_page": {
                                                    "type": "integer"
                                                },
                                                "total": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - insufficient permissions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "This action is unauthorized."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Admission Applications"
                ],
                "summary": "Create a new admission application",
                "description": "Create a new admission application. Students can only create applications for themselves unless they have admin/staff permissions.",
                "operationId": "caa77277270ecf8327a1fd874436b56d",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "student_id",
                                    "term_id"
                                ],
                                "properties": {
                                    "student_id": {
                                        "description": "ID of the student applying",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "term_id": {
                                        "description": "ID of the term for which the student is applying",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "status": {
                                        "description": "Initial status of the application",
                                        "type": "string",
                                        "enum": [
                                            "draft",
                                            "submitted"
                                        ],
                                        "example": "draft"
                                    },
                                    "comments": {
                                        "description": "Additional comments or notes",
                                        "type": "string",
                                        "example": "Looking forward to joining the program",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Admission application created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Admission application created successfully."
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/AdmissionApplicationResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - validation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden - insufficient permissions"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/admission-applications/{id}": {
            "get": {
                "tags": [
                    "Admission Applications"
                ],
                "summary": "Get a specific admission application",
                "description": "Retrieve details of a specific admission application. Students can only view their own applications.",
                "operationId": "5f899f01a66fe05f14e481ed9d00205b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the admission application",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Admission application retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/AdmissionApplicationResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden - insufficient permissions"
                    },
                    "404": {
                        "description": "Admission application not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Admission application not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Admission Applications"
                ],
                "summary": "Update an admission application",
                "description": "Update an admission application. Students can only update their own draft applications. Admin/staff can update any application.",
                "operationId": "52be95c3d898403cea1ee03f2ff660a1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the admission application",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "term_id": {
                                        "description": "ID of the term",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "status": {
                                        "description": "Application status",
                                        "type": "string",
                                        "enum": [
                                            "draft",
                                            "submitted",
                                            "under_review",
                                            "accepted",
                                            "rejected"
                                        ],
                                        "example": "submitted"
                                    },
                                    "comments": {
                                        "description": "Comments or notes",
                                        "type": "string",
                                        "example": "Updated application details",
                                        "nullable": true
                                    },
                                    "decision_date": {
                                        "description": "Decision date (admin/staff only)",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-12-31",
                                        "nullable": true
                                    },
                                    "decision_status": {
                                        "description": "Decision status (admin/staff only)",
                                        "type": "string",
                                        "example": "Accepted with conditions",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Admission application updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Admission application updated successfully."
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/AdmissionApplicationResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - validation failed"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden - insufficient permissions"
                    },
                    "404": {
                        "description": "Admission application not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Admission Applications"
                ],
                "summary": "Delete an admission application",
                "description": "Delete an admission application. Students can only delete their own draft applications. Admin can delete any application.",
                "operationId": "724b2a9e4c648c01d919cac7e70dcbfe",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the admission application",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Admission application deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Admission application deleted successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden - insufficient permissions"
                    },
                    "404": {
                        "description": "Admission application not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/courses": {
            "get": {
                "tags": [
                    "Courses"
                ],
                "summary": "List all courses",
                "description": "Retrieve a paginated list of all courses with their departments and prerequisites",
                "operationId": "getCourses",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "department_id",
                        "in": "query",
                        "description": "Filter courses by department ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved courses",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "code": {
                                                        "type": "string",
                                                        "example": "CS101"
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Introduction to Computer Science"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "Basic concepts of computer science"
                                                    },
                                                    "credits": {
                                                        "type": "integer",
                                                        "example": 3
                                                    },
                                                    "department_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "department": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer"
                                                            },
                                                            "name": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "prerequisites": {
                                                        "type": "array",
                                                        "items": {
                                                            "properties": {
                                                                "id": {
                                                                    "type": "integer"
                                                                },
                                                                "code": {
                                                                    "type": "string"
                                                                },
                                                                "name": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "links": {
                                            "type": "object"
                                        },
                                        "meta": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Courses"
                ],
                "summary": "Create a new course",
                "description": "Store a newly created course with optional prerequisites",
                "operationId": "createCourse",
                "requestBody": {
                    "description": "Course data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "code",
                                    "name",
                                    "credits",
                                    "department_id"
                                ],
                                "properties": {
                                    "code": {
                                        "type": "string",
                                        "maxLength": 10,
                                        "example": "CS101"
                                    },
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Introduction to Computer Science"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Basic concepts of computer science"
                                    },
                                    "credits": {
                                        "type": "integer",
                                        "maximum": 6,
                                        "minimum": 1,
                                        "example": 3
                                    },
                                    "department_id": {
                                        "description": "ID of the department this course belongs to",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "prerequisites": {
                                        "description": "Array of prerequisite course IDs",
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Course created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "code": {
                                                    "type": "string",
                                                    "example": "CS101"
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Introduction to Computer Science"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Basic concepts of computer science"
                                                },
                                                "credits": {
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "department_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "department": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer"
                                                        },
                                                        "name": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/courses/{id}": {
            "get": {
                "tags": [
                    "Courses"
                ],
                "summary": "Get a specific course",
                "description": "Display the specified course with its department and prerequisites",
                "operationId": "getCourse",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Course ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved course",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "code": {
                                                    "type": "string",
                                                    "example": "CS101"
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Introduction to Computer Science"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Basic concepts of computer science"
                                                },
                                                "credits": {
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "department_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "department": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer"
                                                        },
                                                        "name": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "prerequisites": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer"
                                                            },
                                                            "code": {
                                                                "type": "string"
                                                            },
                                                            "name": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Course not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Courses"
                ],
                "summary": "Update a course",
                "description": "Update the specified course",
                "operationId": "updateCourse",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Course ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Course data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "code": {
                                        "type": "string",
                                        "maxLength": 10,
                                        "example": "CS101"
                                    },
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Advanced Computer Science"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Advanced concepts of computer science"
                                    },
                                    "credits": {
                                        "type": "integer",
                                        "maximum": 6,
                                        "minimum": 1,
                                        "example": 4
                                    },
                                    "department_id": {
                                        "description": "ID of the department this course belongs to",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "prerequisites": {
                                        "description": "Array of prerequisite course IDs",
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Course updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "code": {
                                                    "type": "string",
                                                    "example": "CS101"
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Advanced Computer Science"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Advanced concepts of computer science"
                                                },
                                                "credits": {
                                                    "type": "integer",
                                                    "example": 4
                                                },
                                                "department_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "department": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer"
                                                        },
                                                        "name": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Course not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Courses"
                ],
                "summary": "Delete a course",
                "description": "Remove the specified course from storage",
                "operationId": "deleteCourse",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Course ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Course deleted successfully"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Course not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/departments": {
            "get": {
                "tags": [
                    "Departments"
                ],
                "summary": "List all departments",
                "description": "Retrieve a paginated list of all departments with their faculties and programs",
                "operationId": "getDepartments",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "faculty_id",
                        "in": "query",
                        "description": "Filter departments by faculty ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved departments",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Computer Science"
                                                    },
                                                    "faculty_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "faculty": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer"
                                                            },
                                                            "name": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "programs": {
                                                        "type": "array",
                                                        "items": {
                                                            "properties": {
                                                                "id": {
                                                                    "type": "integer"
                                                                },
                                                                "name": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "links": {
                                            "type": "object"
                                        },
                                        "meta": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Departments"
                ],
                "summary": "Create a new department",
                "description": "Store a newly created department",
                "operationId": "createDepartment",
                "requestBody": {
                    "description": "Department data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "faculty_id"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Computer Science"
                                    },
                                    "faculty_id": {
                                        "description": "ID of the faculty this department belongs to",
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Department created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Computer Science"
                                                },
                                                "faculty_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "faculty": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer"
                                                        },
                                                        "name": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/departments/{id}": {
            "get": {
                "tags": [
                    "Departments"
                ],
                "summary": "Get a specific department",
                "description": "Display the specified department with its faculty and programs",
                "operationId": "getDepartment",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Department ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved department",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Computer Science"
                                                },
                                                "faculty_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "faculty": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer"
                                                        },
                                                        "name": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "programs": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer"
                                                            },
                                                            "name": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Department not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Departments"
                ],
                "summary": "Update a department",
                "description": "Update the specified department",
                "operationId": "updateDepartment",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Department ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Department data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Computer Science & Engineering"
                                    },
                                    "faculty_id": {
                                        "description": "ID of the faculty this department belongs to",
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Department updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Computer Science & Engineering"
                                                },
                                                "faculty_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "faculty": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer"
                                                        },
                                                        "name": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Department not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Departments"
                ],
                "summary": "Delete a department",
                "description": "Remove the specified department from storage",
                "operationId": "deleteDepartment",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Department ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Department deleted successfully"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Department not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/students/{student}/documents": {
            "get": {
                "tags": [
                    "Documents"
                ],
                "summary": "Get a student's documents",
                "description": "Retrieve a list of documents for a specific student. The student's user ID is used for authorization.",
                "operationId": "689f90033485a4b58e0765034fd23af3",
                "parameters": [
                    {
                        "name": "student",
                        "in": "path",
                        "description": "The ID of the student.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/DocumentResource"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Documents"
                ],
                "summary": "Upload a document",
                "description": "Upload a new document for a student. File upload handling is not implemented in this version.",
                "operationId": "650bef47ce745d45feada24058c152f1",
                "parameters": [
                    {
                        "name": "student",
                        "in": "path",
                        "description": "The ID of the student.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "501": {
                        "description": "Not Implemented"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/documents/{document}": {
            "get": {
                "tags": [
                    "Documents"
                ],
                "summary": "Get a specific document",
                "description": "Retrieve the details of a specific document.",
                "operationId": "c5241de6309b57267ad914888f95ca9a",
                "parameters": [
                    {
                        "name": "document",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DocumentResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Documents"
                ],
                "summary": "Update a document",
                "description": "Update a document's details. Not implemented.",
                "operationId": "b6ae17d9b33f9c98f394f31ced88bbd2",
                "responses": {
                    "501": {
                        "description": "Not Implemented"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Documents"
                ],
                "summary": "Delete a document",
                "description": "Delete a document. Not implemented.",
                "operationId": "867bc0947afcbba0319db67b27716bea",
                "parameters": [
                    {
                        "name": "document",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "501": {
                        "description": "Not Implemented"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/faculties": {
            "get": {
                "tags": [
                    "Faculties"
                ],
                "summary": "List all faculties",
                "description": "Retrieve a paginated list of all faculties with their departments",
                "operationId": "getFaculties",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1,
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved faculties",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Faculty of Science"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "departments": {
                                                        "type": "array",
                                                        "items": {
                                                            "properties": {
                                                                "id": {
                                                                    "type": "integer"
                                                                },
                                                                "name": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "links": {
                                            "type": "object"
                                        },
                                        "meta": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Faculties"
                ],
                "summary": "Create a new faculty",
                "description": "Store a newly created faculty",
                "operationId": "createFaculty",
                "requestBody": {
                    "description": "Faculty data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Faculty of Science"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Faculty created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Faculty of Science"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/faculties/{id}": {
            "get": {
                "tags": [
                    "Faculties"
                ],
                "summary": "Get a specific faculty",
                "description": "Display the specified faculty with its departments",
                "operationId": "getFaculty",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Faculty ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved faculty",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Faculty of Science"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "departments": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer"
                                                            },
                                                            "name": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Faculty not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Faculties"
                ],
                "summary": "Update a faculty",
                "description": "Update the specified faculty",
                "operationId": "updateFaculty",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Faculty ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Faculty data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Faculty of Applied Science"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Faculty updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Faculty of Applied Science"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Faculty not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Faculties"
                ],
                "summary": "Delete a faculty",
                "description": "Remove the specified faculty from storage",
                "operationId": "deleteFaculty",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Faculty ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Faculty deleted successfully"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Faculty not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/permissions": {
            "get": {
                "tags": [
                    "Permissions"
                ],
                "summary": "Get list of all permissions",
                "description": "Retrieve a paginated list of all system permissions. Only accessible by admin and staff users.",
                "operationId": "c8e60e1cdfb99866cdca9b2d3737f847",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15,
                            "maximum": 100,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "include_roles",
                        "in": "query",
                        "description": "Include roles associated with each permission",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of permissions retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PermissionResource"
                                            }
                                        },
                                        "links": {
                                            "description": "Pagination links",
                                            "type": "object"
                                        },
                                        "meta": {
                                            "description": "Pagination metadata",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden - insufficient permissions"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/permissions/{permission}": {
            "get": {
                "tags": [
                    "Permissions"
                ],
                "summary": "Get a specific permission",
                "description": "Retrieve details of a specific permission by ID. Only accessible by admin and staff users.",
                "operationId": "c3ed8a0b841feb45fefc391168a94b98",
                "parameters": [
                    {
                        "name": "permission",
                        "in": "path",
                        "description": "ID of the permission",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "include_roles",
                        "in": "query",
                        "description": "Include roles associated with this permission",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Permission retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/PermissionResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden - insufficient permissions"
                    },
                    "404": {
                        "description": "Permission not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/admission-applications/{admission_application}/program-choices": {
            "get": {
                "tags": [
                    "Program Choices"
                ],
                "summary": "Get program choices for an admission application",
                "description": "Retrieve all program choices for a specific admission application. Students can only see choices for their own applications.",
                "operationId": "57b2e6431d58f41a05c865a1c5892bac",
                "parameters": [
                    {
                        "name": "admission_application",
                        "in": "path",
                        "description": "ID of the admission application",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of program choices retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ProgramChoiceResource"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden - insufficient permissions"
                    },
                    "404": {
                        "description": "Admission application not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Program Choices"
                ],
                "summary": "Create a new program choice",
                "description": "Add a new program choice to an admission application. Students can only add choices to their own applications.",
                "operationId": "ea50a0c539cda938f4c66846b0418e4e",
                "parameters": [
                    {
                        "name": "admission_application",
                        "in": "path",
                        "description": "ID of the admission application",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "program_id",
                                    "preference_order"
                                ],
                                "properties": {
                                    "program_id": {
                                        "description": "ID of the program to choose",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "preference_order": {
                                        "description": "Preference order (1 = most preferred)",
                                        "type": "integer",
                                        "maximum": 10,
                                        "minimum": 1,
                                        "example": 1
                                    },
                                    "status": {
                                        "description": "Initial status (defaults to pending)",
                                        "type": "string",
                                        "enum": [
                                            "pending",
                                            "accepted",
                                            "rejected"
                                        ],
                                        "example": "pending"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Program choice created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Program choice created successfully."
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/ProgramChoiceResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - validation failed"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden - insufficient permissions"
                    },
                    "404": {
                        "description": "Admission application not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/program-choices/{program_choice}": {
            "get": {
                "tags": [
                    "Program Choices"
                ],
                "summary": "Get a specific program choice",
                "description": "Retrieve details of a specific program choice. Students can only view choices for their own applications.",
                "operationId": "0be6e4dc618d74e1d72a44c5dac46537",
                "parameters": [
                    {
                        "name": "program_choice",
                        "in": "path",
                        "description": "ID of the program choice",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Program choice retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ProgramChoiceResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden - insufficient permissions"
                    },
                    "404": {
                        "description": "Program choice not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Program Choices"
                ],
                "summary": "Update a program choice",
                "description": "Update a program choice. Students can only update choices for their own draft applications. Admin/staff can update any choice.",
                "operationId": "73037402c5aa9ea0fdcb49847af32e35",
                "parameters": [
                    {
                        "name": "program_choice",
                        "in": "path",
                        "description": "ID of the program choice",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "preference_order": {
                                        "description": "Preference order (1 = most preferred)",
                                        "type": "integer",
                                        "maximum": 10,
                                        "minimum": 1,
                                        "example": 2
                                    },
                                    "status": {
                                        "description": "Status (admin/staff only)",
                                        "type": "string",
                                        "enum": [
                                            "pending",
                                            "accepted",
                                            "rejected"
                                        ],
                                        "example": "accepted"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Program choice updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Program choice updated successfully."
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/ProgramChoiceResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - validation failed"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden - insufficient permissions"
                    },
                    "404": {
                        "description": "Program choice not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Program Choices"
                ],
                "summary": "Delete a program choice",
                "description": "Delete a program choice. Students can only delete choices from their own draft applications. Admin can delete any choice.",
                "operationId": "0f318d9fc0b306f80ab249ac26a6fc90",
                "parameters": [
                    {
                        "name": "program_choice",
                        "in": "path",
                        "description": "ID of the program choice",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Program choice deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Program choice deleted successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden - insufficient permissions"
                    },
                    "404": {
                        "description": "Program choice not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/programs": {
            "get": {
                "tags": [
                    "Programs"
                ],
                "summary": "List all programs",
                "operationId": "ace59f99f8c99a5c9772d11ec731e776",
                "responses": {
                    "200": {
                        "description": "A paginated list of programs.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ProgramResource"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    }
                }
            },
            "post": {
                "tags": [
                    "Programs"
                ],
                "summary": "Create a new program",
                "operationId": "d8148ce722f066f9aa354d3a3f6532e4",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreProgramRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Program created successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProgramResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/v1/programs/{program}": {
            "get": {
                "tags": [
                    "Programs"
                ],
                "summary": "Get a single program",
                "operationId": "9fca44a408a27c67671b2c6077341013",
                "parameters": [
                    {
                        "name": "program",
                        "in": "path",
                        "description": "ID of the program",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The requested program.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProgramResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Programs"
                ],
                "summary": "Update a program",
                "operationId": "bc62be0df71d28791abcc71d9e9b072b",
                "parameters": [
                    {
                        "name": "program",
                        "in": "path",
                        "description": "ID of the program",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateProgramRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Program updated successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProgramResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Programs"
                ],
                "summary": "Delete a program",
                "operationId": "3049d62751e4e1c83897b97786407f35",
                "parameters": [
                    {
                        "name": "program",
                        "in": "path",
                        "description": "ID of the program",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Program deleted successfully."
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/api/v1/roles": {
            "get": {
                "tags": [
                    "Roles"
                ],
                "summary": "Get list of all roles",
                "description": "Retrieve a paginated list of all system roles. Only accessible by admin and staff users.",
                "operationId": "c1294bb85dfc016a8f9c0d3f0907293f",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15,
                            "maximum": 100,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "include_permissions",
                        "in": "query",
                        "description": "Include permissions associated with each role",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of roles retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/RoleResource"
                                            }
                                        },
                                        "links": {
                                            "description": "Pagination links",
                                            "type": "object"
                                        },
                                        "meta": {
                                            "description": "Pagination metadata",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden - insufficient permissions"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/roles/{role}": {
            "get": {
                "tags": [
                    "Roles"
                ],
                "summary": "Get a specific role",
                "description": "Retrieve details of a specific role by ID. Only accessible by admin and staff users.",
                "operationId": "15615945226214c177b27790822dc8d0",
                "parameters": [
                    {
                        "name": "role",
                        "in": "path",
                        "description": "ID of the role",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "include_permissions",
                        "in": "query",
                        "description": "Include permissions associated with this role",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Role retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/RoleResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden - insufficient permissions"
                    },
                    "404": {
                        "description": "Role not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/students": {
            "get": {
                "tags": [
                    "Students"
                ],
                "summary": "Get a list of students",
                "description": "Retrieve a paginated list of students. Staff and admins can see all students. Students can only see their own record.",
                "operationId": "4b649fd3816820e7d6ece134d72a7f52",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "include_user",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/StudentResource"
                                            }
                                        },
                                        "links": {
                                            "type": "object"
                                        },
                                        "meta": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Students"
                ],
                "summary": "Create a new student",
                "description": "Create a new student record. This is a complex administrative action and is not implemented in this version.",
                "operationId": "20b07e0eabfb966bf0029eef43b01b6e",
                "responses": {
                    "501": {
                        "description": "Not Implemented"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/students/{student}": {
            "get": {
                "tags": [
                    "Students"
                ],
                "summary": "Get a specific student",
                "description": "Retrieve the details of a specific student.",
                "operationId": "31bd20c3c3e27baf02b8c5386bd629fe",
                "parameters": [
                    {
                        "name": "student",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "include_user",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StudentResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Students"
                ],
                "summary": "Update a student",
                "description": "Update a student's record. This is a complex administrative action and is not implemented in this version.",
                "operationId": "2ddcce83cea189c24a97e11fb2d86050",
                "parameters": [
                    {
                        "name": "student",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "501": {
                        "description": "Not Implemented"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Students"
                ],
                "summary": "Delete a student",
                "description": "Delete a student's record. This is a complex administrative action and is not implemented in this version.",
                "operationId": "3c247e6248fe468b02cf4534ab92e24d",
                "parameters": [
                    {
                        "name": "student",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "501": {
                        "description": "Not Implemented"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/terms": {
            "get": {
                "tags": [
                    "Terms"
                ],
                "summary": "List all terms",
                "operationId": "4e73b3cc0e29d7f685bdd1d808290e58",
                "parameters": [
                    {
                        "name": "academic_year",
                        "in": "query",
                        "description": "Filter terms by academic year",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 2000
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A paginated list of terms.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TermResource"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    }
                }
            },
            "post": {
                "tags": [
                    "Terms"
                ],
                "summary": "Create a new term",
                "operationId": "fd0843d412ad1a5b6f877435e7a4c063",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreTermRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Term created successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TermResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/v1/terms/{term}": {
            "get": {
                "tags": [
                    "Terms"
                ],
                "summary": "Get a single term",
                "operationId": "27161167a937b29a4bcdd5595679b8d5",
                "parameters": [
                    {
                        "name": "term",
                        "in": "path",
                        "description": "ID of the term",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The requested term.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TermResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Terms"
                ],
                "summary": "Update a term",
                "operationId": "2093c90e581a28acc2c44d898a8f7f80",
                "parameters": [
                    {
                        "name": "term",
                        "in": "path",
                        "description": "ID of the term",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateTermRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Term updated successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TermResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Terms"
                ],
                "summary": "Delete a term",
                "operationId": "0d641a5d4a4939efe095142183532e81",
                "parameters": [
                    {
                        "name": "term",
                        "in": "path",
                        "description": "ID of the term",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Term deleted successfully."
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "StoreProgramRequest": {
                "title": "Store Program Request",
                "description": "Request body for creating a new program.",
                "required": [
                    "name",
                    "code",
                    "faculty_id",
                    "department_id",
                    "duration_years",
                    "level",
                    "status"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "Bachelor of Science in Computer Science"
                    },
                    "code": {
                        "type": "string",
                        "maxLength": 50,
                        "example": "BSc-CS"
                    },
                    "description": {
                        "type": "string",
                        "example": "A comprehensive program covering the fundamentals of computer science."
                    },
                    "faculty_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "department_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "duration_years": {
                        "type": "integer",
                        "minimum": 1,
                        "example": 4
                    },
                    "level": {
                        "type": "string",
                        "enum": [
                            "undergraduate",
                            "graduate",
                            "diploma",
                            "certificate"
                        ],
                        "example": "undergraduate"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "active",
                            "inactive",
                            "suspended"
                        ],
                        "example": "active"
                    }
                },
                "type": "object"
            },
            "StoreTermRequest": {
                "title": "Store Term Request",
                "description": "Request body for creating a new academic term.",
                "required": [
                    "name",
                    "academic_year",
                    "semester",
                    "start_date",
                    "end_date"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "Fall 2024"
                    },
                    "academic_year": {
                        "type": "integer",
                        "minimum": 2000,
                        "example": 2024
                    },
                    "semester": {
                        "type": "string",
                        "enum": [
                            "Fall",
                            "Spring",
                            "Summer"
                        ],
                        "example": "Fall"
                    },
                    "start_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-08-26"
                    },
                    "end_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-12-15"
                    }
                },
                "type": "object"
            },
            "UpdateProgramRequest": {
                "title": "Update Program Request",
                "description": "Request body for updating an existing program. All fields are optional.",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "Bachelor of Science in Computer Science"
                    },
                    "code": {
                        "type": "string",
                        "maxLength": 50,
                        "example": "BSc-CS"
                    },
                    "description": {
                        "type": "string",
                        "example": "A comprehensive program covering the fundamentals of computer science."
                    },
                    "faculty_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "department_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "duration_years": {
                        "type": "integer",
                        "minimum": 1,
                        "example": 4
                    },
                    "level": {
                        "type": "string",
                        "enum": [
                            "undergraduate",
                            "graduate",
                            "diploma",
                            "certificate"
                        ],
                        "example": "undergraduate"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "active",
                            "inactive",
                            "suspended"
                        ],
                        "example": "active"
                    }
                },
                "type": "object"
            },
            "UpdateTermRequest": {
                "title": "Update Term Request",
                "description": "Request body for updating an existing academic term. All fields are optional.",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "Fall 2024"
                    },
                    "academic_year": {
                        "type": "integer",
                        "minimum": 2000,
                        "example": 2024
                    },
                    "semester": {
                        "type": "string",
                        "enum": [
                            "Fall",
                            "Spring",
                            "Summer"
                        ],
                        "example": "Fall"
                    },
                    "start_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-08-26"
                    },
                    "end_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-12-15"
                    }
                },
                "type": "object"
            },
            "AcademicRecordResource": {
                "title": "Academic Record Resource",
                "description": "Represents an academic record for a student, such as their GPA for a specific program in a given term.",
                "properties": {
                    "id": {
                        "description": "The unique identifier for the academic record.",
                        "type": "integer",
                        "example": 1
                    },
                    "student_id": {
                        "description": "The ID of the student this record belongs to.",
                        "type": "integer",
                        "example": 1
                    },
                    "program_id": {
                        "description": "The ID of the program this record is associated with.",
                        "type": "integer",
                        "example": 1,
                        "nullable": true
                    },
                    "term_id": {
                        "description": "The ID of the term this record is for.",
                        "type": "integer",
                        "example": 1,
                        "nullable": true
                    },
                    "gpa": {
                        "description": "The Grade Point Average for this record.",
                        "type": "number",
                        "format": "float",
                        "example": 3.85
                    },
                    "status": {
                        "description": "The academic standing or status.",
                        "type": "string",
                        "example": "Good Standing"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "AdmissionApplicationResource": {
                "title": "Admission Application Resource",
                "description": "Admission application resource representation",
                "properties": {
                    "id": {
                        "description": "Unique identifier of the admission application",
                        "type": "integer",
                        "example": 1
                    },
                    "student_id": {
                        "description": "ID of the student who submitted the application",
                        "type": "integer",
                        "example": 1
                    },
                    "term_id": {
                        "description": "ID of the term for which the application is submitted",
                        "type": "integer",
                        "example": 1
                    },
                    "status": {
                        "description": "Current status of the application",
                        "type": "string",
                        "enum": [
                            "draft",
                            "submitted",
                            "under_review",
                            "accepted",
                            "rejected"
                        ],
                        "example": "submitted"
                    },
                    "application_date": {
                        "description": "Date and time when the application was created",
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-15 10:30:00"
                    },
                    "decision_date": {
                        "description": "Date and time when the decision was made",
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-02-15 14:20:00",
                        "nullable": true
                    },
                    "decision_status": {
                        "description": "Additional information about the decision",
                        "type": "string",
                        "example": "Accepted with conditions",
                        "nullable": true
                    },
                    "comments": {
                        "description": "Additional comments or notes about the application",
                        "type": "string",
                        "example": "Looking forward to joining the program",
                        "nullable": true
                    },
                    "student": {
                        "description": "Student information (when loaded)",
                        "type": "object",
                        "nullable": true
                    },
                    "term": {
                        "description": "Term information (when loaded)",
                        "type": "object",
                        "nullable": true
                    },
                    "program_choices": {
                        "description": "List of program choices for this application (when loaded)",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProgramChoiceResource"
                        }
                    }
                },
                "type": "object"
            },
            "DocumentResource": {
                "title": "Document Resource",
                "description": "Represents a document uploaded by a user, such as a transcript or a resume.",
                "properties": {
                    "id": {
                        "description": "The unique identifier for the document.",
                        "type": "integer"
                    },
                    "user_id": {
                        "description": "The ID of the user who owns this document.",
                        "type": "integer"
                    },
                    "document_type": {
                        "description": "The type of the document.",
                        "type": "string",
                        "example": "transcript"
                    },
                    "file_path": {
                        "description": "The storage path of the document file.",
                        "type": "string"
                    },
                    "file_name": {
                        "description": "The original name of the document file.",
                        "type": "string"
                    },
                    "verified_at": {
                        "description": "When the document was verified by an administrator.",
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "PermissionResource": {
                "title": "Permission Resource",
                "description": "Permission resource representation",
                "properties": {
                    "id": {
                        "description": "Unique identifier of the permission",
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "description": "Name of the permission",
                        "type": "string",
                        "example": "view-students"
                    },
                    "description": {
                        "description": "Description of the permission",
                        "type": "string",
                        "example": "Can view student information",
                        "nullable": true
                    },
                    "created_at": {
                        "description": "When the permission was created",
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-15T08:30:00Z"
                    },
                    "updated_at": {
                        "description": "When the permission was last updated",
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-15T08:30:00Z"
                    },
                    "roles": {
                        "description": "Roles that have this permission",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RoleResource"
                        }
                    }
                },
                "type": "object"
            },
            "ProgramChoiceResource": {
                "title": "Program Choice Resource",
                "description": "Program choice resource representation",
                "properties": {
                    "id": {
                        "description": "Unique identifier of the program choice",
                        "type": "integer",
                        "example": 1
                    },
                    "application_id": {
                        "description": "ID of the admission application this choice belongs to",
                        "type": "integer",
                        "example": 1
                    },
                    "program_id": {
                        "description": "ID of the program being chosen",
                        "type": "integer",
                        "example": 1
                    },
                    "preference_order": {
                        "description": "The preference order of this program choice (1 = most preferred)",
                        "type": "integer",
                        "example": 1
                    },
                    "status": {
                        "description": "Current status of this program choice",
                        "type": "string",
                        "enum": [
                            "pending",
                            "accepted",
                            "rejected"
                        ],
                        "example": "pending"
                    },
                    "program": {
                        "description": "Program information (when loaded)",
                        "type": "object",
                        "nullable": true
                    },
                    "admission_application": {
                        "$ref": "#/components/schemas/AdmissionApplicationResource"
                    }
                },
                "type": "object"
            },
            "ProgramResource": {
                "title": "Program Resource",
                "description": "A program of study offered by the university.",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "Bachelor of Science in Computer Science"
                    },
                    "code": {
                        "type": "string",
                        "maxLength": 50,
                        "example": "BSc-CS"
                    },
                    "description": {
                        "type": "string",
                        "example": "A comprehensive program covering the fundamentals of computer science."
                    },
                    "duration_years": {
                        "type": "integer",
                        "example": 4
                    },
                    "level": {
                        "type": "string",
                        "enum": [
                            "undergraduate",
                            "graduate",
                            "diploma",
                            "certificate"
                        ],
                        "example": "undergraduate"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "active",
                            "inactive",
                            "suspended"
                        ],
                        "example": "active"
                    },
                    "faculty_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "department_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "type": "object"
            },
            "RoleResource": {
                "title": "Role Resource",
                "description": "Role resource representation",
                "properties": {
                    "id": {
                        "description": "Unique identifier of the role",
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "description": "Name of the role",
                        "type": "string",
                        "example": "admin"
                    },
                    "description": {
                        "description": "Description of the role",
                        "type": "string",
                        "example": "Administrator with full system access",
                        "nullable": true
                    },
                    "created_at": {
                        "description": "When the role was created",
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-15T08:30:00Z"
                    },
                    "updated_at": {
                        "description": "When the role was last updated",
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-15T08:30:00Z"
                    },
                    "permissions": {
                        "description": "Permissions associated with this role",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PermissionResource"
                        }
                    }
                },
                "type": "object"
            },
            "StudentResource": {
                "title": "Student Resource",
                "description": "Represents a student in the system.",
                "properties": {
                    "id": {
                        "description": "The unique identifier for the student.",
                        "type": "integer",
                        "example": 1
                    },
                    "student_number": {
                        "description": "The unique student identification number.",
                        "type": "string",
                        "example": "2024-00001"
                    },
                    "user": {
                        "$ref": "#/components/schemas/UserResource"
                    }
                },
                "type": "object"
            },
            "TermResource": {
                "title": "Term Resource",
                "description": "An academic term/semester in the university calendar.",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "Fall 2024"
                    },
                    "academic_year": {
                        "type": "integer",
                        "minimum": 2000,
                        "example": 2024
                    },
                    "semester": {
                        "type": "string",
                        "enum": [
                            "Fall",
                            "Spring",
                            "Summer"
                        ],
                        "example": "Fall"
                    },
                    "start_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-08-26"
                    },
                    "end_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-12-15"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "type": "object"
            },
            "UserResource": {
                "title": "User Resource",
                "description": "Represents a user in the system.",
                "properties": {
                    "id": {
                        "description": "The unique identifier for the user.",
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "description": "The name of the user.",
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "description": "The email address of the user.",
                        "type": "string",
                        "format": "email",
                        "example": "john.doe@example.com"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Academic Records",
            "description": "API endpoints for managing academic records for a student"
        },
        {
            "name": "Admission Applications",
            "description": "API endpoints for managing admission applications"
        },
        {
            "name": "Courses",
            "description": "Course management endpoints"
        },
        {
            "name": "Departments",
            "description": "Department management endpoints"
        },
        {
            "name": "Documents",
            "description": "API endpoints for managing student documents"
        },
        {
            "name": "Faculties",
            "description": "Faculty management endpoints"
        },
        {
            "name": "Permissions",
            "description": "API endpoints for viewing system permissions (read-only access for administrators)"
        },
        {
            "name": "Program Choices",
            "description": "API endpoints for managing program choices within admission applications"
        },
        {
            "name": "Programs",
            "description": "Endpoints for managing academic programs."
        },
        {
            "name": "Roles",
            "description": "API endpoints for viewing system roles (read-only access for administrators)"
        },
        {
            "name": "Students",
            "description": "API endpoints for managing student records"
        },
        {
            "name": "Terms",
            "description": "Endpoints for managing academic terms and semesters."
        }
    ]
}